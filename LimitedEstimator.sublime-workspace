{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"BEETS",
				"BEETS_BEGIN〔variable〕"
			],
			[
				"FARM",
				"FARM_CURSE〔variable〕"
			],
			[
				"WEE",
				"WEED_BASE"
			],
			[
				"upgrade",
				"upgradesM"
			],
			[
				"is",
				"isDiscovered"
			],
			[
				"upgra",
				"upgrades"
			],
			[
				"se",
				"setTestData"
			],
			[
				"farmign",
				"farmingTotal"
			],
			[
				"farming",
				"farmingTotal"
			],
			[
				"lo",
				"loadedTimePlayed"
			],
			[
				"load",
				"loadedTimePlayed〔variable〕"
			],
			[
				"to",
				"text:amount().toFixed"
			],
			[
				"time",
				"timePlayed"
			],
			[
				"get",
				"getTimePlayed"
			],
			[
				"farm",
				"farmingTotal"
			],
			[
				"TI",
				"TILLING_PENTALTY"
			],
			[
				"up",
				"upgrade"
			],
			[
				"K",
				"K_FARMING"
			],
			[
				"F",
				"FARM_CURSE"
			],
			[
				"unit",
				"units"
			],
			[
				"FI",
				"FISHING"
			],
			[
				"WOOD",
				"WOODCUTTING〔variable〕"
			],
			[
				"BEE",
				"BEET_MARKET〔variable〕"
			],
			[
				"eve",
				"eventsM〔argument〕"
			],
			[
				"loa",
				"loadEvents〔function〕"
			],
			[
				"isDi",
				"isObtained"
			],
			[
				"document",
				"document.cookie"
			],
			[
				"cook",
				"cookieUnits〔variable〕"
			],
			[
				"uni",
				"unitArray〔variable〕"
			],
			[
				"ski",
				"skills〔argument〕"
			],
			[
				"ga",
				"gainXp"
			],
			[
				"g",
				"gainXp"
			],
			[
				"fun",
				"function〔keyword〕"
			],
			[
				"S",
				"STEEL_HOE_BONUS"
			],
			[
				"IRON_H",
				"IRON_HOE_BONUS"
			],
			[
				"TIL",
				"TILLING_BONUS"
			],
			[
				"gui",
				"guildTotal"
			],
			[
				"guil",
				"guildTotal"
			],
			[
				"CRAFTING",
				"CRAFTING_G〔variable〕"
			],
			[
				"in",
				"incrementLevel"
			],
			[
				"AXE",
				"AXE_DESCRIPTION〔variable〕"
			],
			[
				"dis",
				"discoverer"
			],
			[
				"Uni",
				"UnitDescription"
			],
			[
				"gen",
				"generation"
			],
			[
				"gene",
				"generate"
			],
			[
				"self",
				"selfAware"
			],
			[
				"ev",
				"event"
			],
			[
				"occu",
				"occurred"
			],
			[
				"even",
				"eventMap"
			],
			[
				"fu",
				"function"
			],
			[
				"disc",
				"discover"
			],
			[
				"pro",
				"progress"
			],
			[
				"border",
				"border-radius"
			],
			[
				"bac",
				"background-color"
			],
			[
				"bee",
				"beets"
			],
			[
				"set",
				"setAvailability"
			],
			[
				"av",
				"availability"
			],
			[
				"chec",
				"checkDiscovery"
			],
			[
				"skill",
				"skillMap"
			],
			[
				"skil",
				"skillMap"
			],
			[
				"wid",
				"width"
			],
			[
				"selected",
				"selectedItem"
			],
			[
				"select",
				"selectedItem"
			],
			[
				"selec",
				"selectedItem"
			],
			[
				"exis",
				"existingSrs"
			],
			[
				"exi",
				"existingSrs"
			],
			[
				"Record",
				"RecordType"
			],
			[
				"Region",
				"Region__c"
			],
			[
				"not",
				"notBundle"
			],
			[
				"eng",
				"engForUpdate"
			],
			[
				"updat",
				"updatedOCircuits"
			],
			[
				"upda",
				"updatedOCircuits"
			],
			[
				"object",
				"objectFieldApi"
			],
			[
				"feed",
				"feedbackFieldApi"
			],
			[
				"oC",
				"oCircuitsContainer"
			],
			[
				"Oppcir",
				"Opportunity_Circuit__c\t[Sobject Name]"
			],
			[
				"Oppc",
				"Opportunity_Circuit__r"
			],
			[
				"sr",
				"srSet"
			],
			[
				"valid",
				"validatableNetwork"
			],
			[
				"test",
				"testSetup"
			],
			[
				"Date",
				"Datetime\t[Standard Apex Class]"
			],
			[
				"Is",
				"Is_New_Order__c"
			],
			[
				"epl",
				"eplOCircuitsContainer"
			],
			[
				"vali",
				"validatableNetwork"
			],
			[
				"Ne",
				"NetworkIntegrationValidationHandler\t[Custom Apex Class]"
			],
			[
				"engin",
				"engineeringToUpdate"
			],
			[
				"oCir",
				"oCircuitsToUpdate"
			],
			[
				"oCi",
				"oCircuitsToUpdate"
			],
			[
				"oNe",
				"oNetworksToUpdate"
			],
			[
				"Enng",
				"Engineering__c"
			],
			[
				"Opp",
				"Opportunity_Circuits_Container__c"
			],
			[
				"Engin",
				"Engineering__c"
			],
			[
				"OCir",
				"Opportunity_Circuit__c"
			],
			[
				"add",
				"PUBLIC addAll(LIST elements) \tvoid"
			],
			[
				"Oppcirc",
				"Opportunity_Circuits_Container__c"
			],
			[
				"old",
				"oldMap"
			],
			[
				"upd",
				"updatedECircuits"
			],
			[
				"eC",
				"eCircuitToOlis"
			],
			[
				"eN",
				"eNetworkId"
			],
			[
				"Ether",
				"Ethernet_Circuit__c\t[Sobject Name]"
			],
			[
				"Oppor",
				"Opportunity_Circuit__c"
			],
			[
				"Ethern",
				"Ethernet_Connection__c"
			],
			[
				"e",
				"eCircuit"
			],
			[
				"eNw",
				"eNetworkIdToECircuits"
			],
			[
				"service",
				"PUBLIC queryECircuitsForServiceCodes(Ethernet_Connection__c eNetwork) \tLIST"
			],
			[
				"servicecod",
				"PRIVATE populateEeCodesForMacd(Ethernet_Circuit__c eCircuit, Map serviceCodeToOli, String location) \tEthernet_Circuit__c"
			],
			[
				"Ethe",
				"Ethernet_Circuit__c\t[Sobject Name]"
			],
			[
				"oli",
				"oliQuery"
			],
			[
				"eCi",
				"eCircuitId"
			],
			[
				"Oppcirne",
				"Opportunity_Circuits_Container__c\t[Sobject Name]"
			],
			[
				"Opportunity",
				"Opportunity_Circuit__c\t[Sobject Name]"
			],
			[
				"tes",
				"TestingUtils"
			],
			[
				"EE",
				"EEServices\t[Custom Apex Class]"
			],
			[
				"ac",
				"activeOli"
			],
			[
				"servi",
				"Service_Code_Old__c"
			],
			[
				"E",
				"Ethernet_Circuit__c"
			],
			[
				"clo",
				"closedWonOpps"
			],
			[
				"id",
				"idToECircuit"
			],
			[
				"put",
				"PUBLIC put(ANY key, ANY value) \tString"
			],
			[
				"clos",
				"closedWonOpps"
			],
			[
				"Oppser",
				"OpportunityServices"
			],
			[
				"aOli",
				"aOlisSet"
			],
			[
				"mrs",
				"mrsPbe"
			],
			[
				"Loca",
				"Location_Type__c"
			],
			[
				"Pro",
				"Product_Name__c"
			],
			[
				"MRS",
				"MRSA002"
			],
			[
				"MRSA",
				"MRSA001"
			],
			[
				"ser",
				"serviceCodeField"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "inst",
		"selected_items":
		[
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"run",
				"MavensMate: Run Apex Tests..."
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"test",
				"MavensMate: Run Apex Tests..."
			],
			[
				"remov",
				"Package Control: Remove Package"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"Package Control: re",
				"Package Control: Remove Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"package",
				"Package Control: Remove Package"
			],
			[
				"svn",
				"SVN: Checkout…"
			],
			[
				"che",
				"SVN: Checkout…"
			],
			[
				"packrem",
				"Package Control: Remove Package"
			],
			[
				"Package Control: ",
				"Package Control: Remove Package"
			],
			[
				"build",
				"Build: Build"
			],
			[
				"git",
				"Package Control: Install Package"
			],
			[
				"packa",
				"Package Control: Remove Package"
			]
		],
		"width": 528.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"show applicable",
			"git",
			"igt",
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/C/Users/cweaver/AppData/Local/Temp/Temp1_AcumenMovieRentalSourceCode.zip/AcumenMovieRentalSourceCode/classes/TitleStockController.cls",
		"/C/Users/cweaver/AppData/Local/Temp/Temp1_AcumenMovieRentalSourceCode.zip/AcumenMovieRentalSourceCode/classes/TitleStocker.cls",
		"/C/Users/cweaver/AppData/Local/Temp/Temp1_AcumenMovieRentalSourceCode.zip/AcumenMovieRentalSourceCode/pages/TitleStock.page",
		"/C/PyDev/LimitedEstimator/aer-average-ratings.json",
		"/C/PyDev/LimitedEstimator/json/marshall-aer-ratings.json",
		"/C/PyDev/LimitedEstimator/json/manaleek-aer-ratings.json",
		"/C/PyDev/LimitedEstimator/json/aer-lsv-ratings.json",
		"/C/PyDev/LimitedEstimator/json/aer-lr-ratings.json",
		"/C/PyDev/LimitedEstimator/json/aer-set.json",
		"/C/Users/cweaver/mmWorkspace/Jan Bootcamp '17/src/classes/RentalGenerator.cls",
		"/C/Users/cweaver/Google Drive/Idle RPG/js/Player.js",
		"/C/Users/cweaver/Google Drive/Idle RPG/js/StatisticTracker.js",
		"/C/Users/cweaver/Google Drive/Idle RPG/js/UpgradeDescription.js",
		"/C/Users/cweaver/Google Drive/Idle RPG/css/style.scss",
		"/C/Users/cweaver/Google Drive/Idle RPG/libs/progressBar.js",
		"/C/Users/cweaver/Google Drive/Idle RPG/gulpfile.js",
		"/C/Users/cweaver/Google Drive/Idle RPG/css/style.css",
		"/C/Users/cweaver/Google Drive/Idle RPG/js/UnitDescription.js",
		"/C/Users/cweaver/Google Drive/Idle RPG/js/SkillDescription.js",
		"/C/Users/cweaver/Google Drive/Idle RPG/js/SaveManager.js",
		"/C/Users/cweaver/Google Drive/Idle RPG/js/EventDescription.js",
		"/C/Users/cweaver/AppData/Local/Temp/Temp1_Case_03420696_20161222-14705 (2).zip/classes/ServiceRequestAfterTriggerLogic.cls",
		"/C/Users/cweaver/Google Drive/Idle RPG/js/Generator.js",
		"/C/Users/cweaver/Google Drive/Idle RPG/server.js",
		"/C/Users/cweaver/Google Drive/Idle RPG/package.json",
		"/C/Users/Caleb/Google Drive/Idle RPG/js/SkillDescription.js",
		"/C/Users/Caleb/Google Drive/Idle RPG/js/EventDescriber.js",
		"/C/Users/Caleb/Google Drive/Idle RPG/js/Player.js",
		"/C/Users/Caleb/Google Drive/Idle RPG/js/StatisticTracker.js",
		"/C/Users/Caleb/Google Drive/Idle RPG/js/Discoverer.js",
		"/C/Users/Caleb/Google Drive/Idle RPG/js/UpgradeDescription.js",
		"/C/Users/Caleb/Google Drive/Idle RPG/js/EventDescription.js",
		"/C/Users/Caleb/Google Drive/Idle RPG/js/UnitDescription.js",
		"/C/Users/Caleb/Google Drive/Idle RPG/js/Generator.js",
		"/C/Users/Caleb/Google Drive/Idle RPG/js/GameModel.js",
		"/C/Users/Caleb/Google Drive/Idle RPG/js/UpgradeDescriber.js",
		"/C/Users/Caleb/Google Drive/Idle RPG/js/SkillDescriber.js",
		"/C/Users/Caleb/Google Drive/Idle RPG/js/SkillNames.js",
		"/C/Users/Caleb/Google Drive/Idle RPG/js/app.js",
		"/C/Users/Caleb/Google Drive/Idle RPG/js/UnitModel.js",
		"/C/Users/Caleb/Google Drive/Idle RPG/js/BeetDescription.js",
		"/C/Users/Caleb/Google Drive/Idle RPG/js/skillNames.js",
		"/C/Users/Caleb/Google Drive/Idle RPG/js/require.js",
		"/C/Users/Caleb/Google Drive/Idle RPG/css/style.css",
		"/C/Users/Caleb/Google Drive/Idle RPG/js/Upgrade.js",
		"/C/Users/Caleb/Google Drive/Idle RPG/js/Upgrades.js",
		"/C/Users/Caleb/Google Drive/Idle RPG/js/Upgrades",
		"/C/Users/Caleb/Google Drive/Idle RPG/js/unitModel.js",
		"/C/Users/Caleb/Google Drive/Idle RPG/js/unitDefinition.js",
		"/C/Users/Caleb/Google Drive/Idle RPG/js/unit.js",
		"/C/Users/Caleb/.counterplay/installs.json",
		"/C/Users/Caleb/AppData/Roaming/Sublime Text 3/Packages/User/SublimeLinter.sublime-settings",
		"/C/Users/Caleb/Google Drive/Idle RPG/index.html",
		"/C/Users/Caleb/Google Drive/Idle RPG/Idle RPG.sublime-project",
		"/C/Users/Caleb/Google Drive/Idle RPG/js/tests/test.js",
		"/C/Users/Caleb/Google Drive/Idle RPG/js/goldController.js",
		"/C/Users/cweaver/Google Drive/Idle RPG/js/tests/app.js",
		"/C/Users/cweaver/SublimeWorkspace/df16-smartmirror-frontend/app/components/bottom-bar/bottom-bar.view.html",
		"/C/Users/cweaver/SublimeWorkspace/df16-smartmirror-frontend/app/components/bottom-bar/bottom-bar.directive.js",
		"/C/Users/cweaver/SublimeWorkspace/df16-smartmirror-frontend/app/services/modal.service.js",
		"/C/Users/cweaver/SublimeWorkspace/df16-smartmirror-frontend/app/components/item-detail-modal/item-detail.controller.js",
		"/C/Users/cweaver/SublimeWorkspace/df16-smartmirror-frontend/app/components/size-modal/size-modal.controller.js",
		"/C/Users/cweaver/SublimeWorkspace/df16-smartmirror-frontend/app/components/size-modal/size-modal.view.html",
		"/C/Users/cweaver/SublimeWorkspace/df16-smartmirror-frontend/assets/css/_item-size.scss",
		"/C/Users/cweaver/SublimeWorkspace/df16-smartmirror-frontend/assets/css/_card.scss",
		"/C/Users/cweaver/SublimeWorkspace/df16-smartmirror-frontend/app/components/item-listing/item-listing.view.html",
		"/C/Users/cweaver/SublimeWorkspace/df16-smartmirror-frontend/assets/css/main.scss",
		"/C/Users/cweaver/SublimeWorkspace/df16-smartmirror-frontend/assets/css/_item-detail - Copy.scss",
		"/C/Users/cweaver/SublimeWorkspace/df16-smartmirror-frontend/app/components/item-detail/item-detail.controller.js",
		"/C/Users/cweaver/SublimeWorkspace/df16-smartmirror-frontend/.gitignore",
		"/C/Users/cweaver/SublimeWorkspace/df16-smartmirror-frontend/df16-smartmirror-frontend.sublime-project",
		"/C/Users/cweaver/MMWorkspace/EEDev/EEDev.sublime-project",
		"/C/Users/cweaver/SublimeWorkspace/df16-smartmirror-frontend/app/services/product.service.js",
		"/C/Users/cweaver/SublimeWorkspace/df16-smartmirror-frontend/app/services/case.service.js",
		"/C/Users/cweaver/SublimeWorkspace/df16-smartmirror-frontend/app/components/actions-bar/actions-bar.view.html",
		"/C/Users/cweaver/SublimeWorkspace/df16-smartmirror-frontend/app/app.states.js",
		"/C/Users/cweaver/SublimeWorkspace/df16-smartmirror-frontend/app/components/sidebar/sidebar.view.html",
		"/C/Users/cweaver/SublimeWorkspace/df16-smartmirror-frontend/app/components/actions-bar/actions-bar.directive.js",
		"/C/Users/cweaver/SublimeWorkspace/df16-smartmirror-frontend/app/components/newquestion-modal/newquestion-modal.template.html",
		"/C/Users/cweaver/SublimeWorkspace/df16-smartmirror-frontend/app/components/newquestion-modal/newquestion-modal.controller.js",
		"/C/Users/cweaver/SublimeWorkspace/df16-smartmirror-frontend/app/pages/survey/survey.view.html",
		"/C/Users/cweaver/SublimeWorkspace/df16-smartmirror-frontend/app/pages/survey/survey.controller.js",
		"/C/Users/cweaver/SublimeWorkspace/df16-smartmirror-frontend/app/pages/home/home.controller.js",
		"/C/Users/cweaver/SublimeWorkspace/df16-smartmirror-frontend/app/pages/home/home.view.html",
		"/C/Users/cweaver/SublimeWorkspace/df16-smartmirror-frontend/index.html",
		"/C/Users/cweaver/SublimeWorkspace/df16-smartmirror-frontend/server.js",
		"/C/Users/cweaver/MMWorkspace/POR6214/src/triggers/OppAfterInsertAfterUpdate.trigger",
		"/C/Users/cweaver/MMWorkspace/POR6214/src/classes/EEServices.cls",
		"/C/Users/cweaver/SublimeWorkspace/df16-smartmirror-frontend/package.json",
		"/C/Users/cweaver/Downloads/EEServices (2).cls",
		"/C/Users/cweaver/MMWorkspace/POR6214/src/classes/OppCircuitsNetworkBeforeLogicTest.cls",
		"/C/Users/cweaver/MMWorkspace/CR2_Expo/classes/OpportunityCircuitsNetworkBeforeLogic.cls",
		"/C/Users/cweaver/MMWorkspace/POR6214/src/classes/OpportunityCircuitsNetworkBeforeLogic.cls",
		"/C/Users/cweaver/MMWorkspace/CR2_Expo/classes/OppCircuitsNetworkBeforeLogicTest.cls",
		"/C/Users/cweaver/MMWorkspace/CR2_Expo/classes/OpportunityCircuitNetworkAfterLogicTest.cls",
		"/C/Users/cweaver/MMWorkspace/CR2_Expo/classes/OpportunityCircuitNetworkAfterLogic.cls",
		"/C/Users/cweaver/MMWorkspace/POR6214/src/classes/OpportunityCircuitAfterLogic.cls",
		"/C/Users/cweaver/MMWorkspace/CR2_Expo/classes/OpportunityCircuitAfterLogicTest.cls",
		"/C/Users/cweaver/MMWorkspace/POR6214/src/classes/OpportunityCircuitAfterLogicTest.cls",
		"/C/Users/cweaver/MMWorkspace/CR2_Expo/classes/OpportunityCircuitAfterLogic.cls",
		"/C/Users/cweaver/MMWorkspace/CR2_Expo/triggers/OpportunityCircuitsNetworkBefore.trigger",
		"/C/Users/cweaver/MMWorkspace/CR2_Expo/classes/ServiceRequestAfterTriggerLogic (2).cls",
		"/C/Users/cweaver/MMWorkspace/CR2_Expo/classes/ServiceRequestAfterTriggerLogic.cls",
		"/C/Users/cweaver/MMWorkspace/POR6214/src/classes/NetworkIntegrationValidationHandlerTest.cls",
		"/C/Users/cweaver/MMWorkspace/CR2_Expo/classes/NetworkIntegrationValidationHandlerTest.cls",
		"/C/Users/cweaver/MMWorkspace/POR6214/src/classes/OpportunityCircuitNetworkAfterLogic.cls",
		"/C/Users/cweaver/MMWorkspace/POR6214/src/classes/OpportunityCircuitNetworkAfterLogicTest.cls",
		"/C/Users/cweaver/Downloads/OpportunityCircuitsNetworkBeforeLogic.cls",
		"/C/Users/cweaver/MMWorkspace/POR6214/src/classes/OpportunityBeforeTriggerLogic.cls",
		"/C/Users/cweaver/MMWorkspace/POR6214/src/triggers/OpportunityCircuitsNetworkBefore.trigger",
		"/C/Users/cweaver/MMWorkspace/POR6214/src/classes/SFDockIntegrationBeforeTriggerLogic.cls",
		"/C/Users/cweaver/MMWorkspace/POR6214/src/classes/ServiceRequestAfterTriggerLogic.cls",
		"/C/Users/cweaver/MMWorkspace/TWC Ant Tasks/src/retrieveUnpackaged/retrieve_09S19000001AA7GEAW/package.xml",
		"/C/Users/cweaver/Downloads/ServiceRequestBefore.tgr",
		"/C/Users/cweaver/MMWorkspace/TWC Ant Tasks/src/retrieveUnpackaged/retrieve_09S19000001AA7GEAW/triggers/ServiceRequestBefore.trigger",
		"/C/Users/cweaver/Downloads/ServiceRequestAfter.tgr",
		"/C/Users/cweaver/MMWorkspace/TWC Ant Tasks/src/retrieveUnpackaged/retrieve_09S19000001AA7GEAW/triggers/ServiceRequestAfter.trigger",
		"/C/Users/cweaver/MMWorkspace/TWC Ant Tasks/src/retrieveUnpackaged/retrieve_09S19000001AA7GEAW/triggers/OpportunityCircuitsNetworkBefore.trigger",
		"/C/Users/cweaver/MMWorkspace/TWC Ant Tasks/src/retrieveUnpackaged/retrieve_09S19000001AA7GEAW/triggers/OpportunityCircuitsNetworkAfter.trigger",
		"/C/Users/cweaver/MMWorkspace/TWC Ant Tasks/src/retrieveUnpackaged/retrieve_09S19000001AA7GEAW/triggers/OpportunityCircuitBefore.trigger",
		"/C/Users/cweaver/Downloads/OpportunityCircuitAfter.tgr",
		"/C/Users/cweaver/MMWorkspace/TWC Ant Tasks/src/retrieveUnpackaged/retrieve_09S19000001AA7GEAW/triggers/OpportunityCircuitAfter.trigger",
		"/C/Users/cweaver/Downloads/EngineeringBefore.tgr",
		"/C/Users/cweaver/MMWorkspace/TWC Ant Tasks/src/retrieveUnpackaged/retrieve_09S19000001AA7GEAW/triggers/EngineeringBefore.trigger",
		"/C/Users/cweaver/MMWorkspace/TWC Ant Tasks/src/retrieveUnpackaged/retrieve_09S19000001AA7GEAW/triggers/EngineeeringAfter.trigger",
		"/C/Users/cweaver/MMWorkspace/TWC Ant Tasks/src/retrieveUnpackaged/retrieve_09S19000001AA7GEAW/classes/TestingUtils.cls",
		"/C/Users/cweaver/Downloads/TestingUtils.cls",
		"/C/Users/cweaver/MMWorkspace/TWC Ant Tasks/src/retrieveUnpackaged/retrieve_09S19000001AA7GEAW/classes/SRModificationSnapshotWrapper.cls"
	],
	"find":
	{
		"height": 30.0
	},
	"find_in_files":
	{
		"height": 102.0,
		"where_history":
		[
			"<open_files>",
			"C:\\Users\\cweaver\\SublimeWorkspace\\",
			"C:\\Users\\cweaver\\SublimeWorkspace\\df16-smartmirror-frontend\\",
			"C:\\Users\\cweaver\\SublimeWorkspace\\df16-smartmirror-frontend",
			"C:\\Users\\cweaver\\mmworkspace\\POR6214\\src",
			"C:\\Users\\cweaver\\mmworkspace\\POR6214",
			"C:\\Users\\cweaver\\mmworkspace\\EEDev",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"MARKET",
			"curseBase",
			"tz-bar",
			"progress",
			"progressInitialize",
			"fn",
			"isAvailableTest",
			"loadedTimePlayed",
			"sessionOpenTime",
			"timePlayed",
			"level",
			"timePlayed",
			"openTime",
			"time",
			"playTime",
			"console",
			"console.log",
			"startObservedTime",
			"TILLING_BONUS",
			"5",
			"console.lo",
			"events",
			"units",
			"console",
			"asArray",
			"experience",
			"save",
			"isDiscovered",
			"upgrade",
			"upgrades",
			"isAvailable",
			"skill",
			"skills",
			"Skills",
			"unit",
			"units",
			"amount",
			"asarra",
			"amount",
			"createUnit",
			"unit",
			"SELF_AWARENESS",
			"level",
			";\n",
			"gainLevel",
			"IRON_HOE",
			"console",
			"for",
			"length",
			"hasoccur",
			"events",
			"skills",
			"occurred",
			"UnitDescriber",
			"units",
			"available",
			"skills",
			"SkillDescription",
			"Unit",
			"units",
			"gold",
			"UnitDescription",
			"skillDescription",
			"toArray",
			"toarra",
			"case",
			"STRENGTH",
			"dexterity",
			"farming",
			"discoverer",
			"generator",
			"units",
			"tofixed",
			"event",
			"tofixed",
			"skills",
			"totalObservedTime",
			"experience",
			"h3",
			"wasDiscovered",
			"{\n",
			"var ",
			"skillMap",
			"events",
			"wasDiscovered",
			"discoverable",
			"skills",
			"consol",
			"console.log",
			"events",
			"isDiscovered",
			"discoverable",
			"happens",
			"isDiscovered",
			"discoveryCondition",
			"discovery",
			"startTime",
			"totalTime",
			"upgrade",
			"upgrades",
			"setInterval",
			"skill",
			"h4",
			"h3",
			"span",
			"p",
			"div",
			"available",
			"avail",
			"new Unit",
			"skillMap",
			"level",
			"unitMap",
			"skillMap",
			"createSkill",
			"createUnit",
			"experienceToLevel",
			"compute",
			"level",
			"Level",
			"level",
			"Level",
			"level",
			"Farming",
			"setle",
			"extraIncrement",
			"increment",
			"goldModel"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"EE_SERVICE_OCC_LABEL_BASE",
			"EE_SERVICE_CODE_LABEL_BASE",
			"MRS_SERVICE_OCC_LABEL_BASE",
			"MRS_SERVICE_CODE_LABEL_BASE",
			"private static ",
			"List<OpportunityLineItem>",
			") {",
			"for (",
			"if (",
			"package",
			"    ",
			"eplanToVirtualCircuits",
			"ToVCircuit",
			"vc",
			"vCircuit",
			"VirtualCircuit",
			"updateEplanEthernetCircuitGeoCode",
			"updateNonEplanEthernetCircuitGeoCode",
			"updatedECircuitsMap",
			"eCircuitIdToECircuit",
			"getWidestGeoCode",
			"eCircuitIdToGeoCode",
			"connectionGeoCode",
			"eConnectionIdToNodes",
			"eConnectionIdToECircuits",
			"eplanConnections",
			"eCircuit",
			"eConnection",
			"idToNonEplanCircuits",
			"idToEplanCircuits",
			"metroZ",
			"metroA",
			"regionZ",
			"regionA",
			"circuitsToUpdate",
			"putCircuitInConnectionMap",
			"eConnectionIdToECircuits",
			"eConECircuitMap",
			"updateEConnectionGeoCode",
			"eConnectionIdToECircuits",
			"updateEthernetConnectionGeoCode",
			"for (",
			"if (",
			"oldEthernetConnectionIds",
			"putInConnectionMap",
			"mapCircuitToConnectionMap",
			"eConnectionIdToECircuit",
			"addCircuitToMap",
			"eCircuit",
			"eConnectionIdToECircuit",
			"eConIdECktMap",
			"oli",
			"isFirstRangeFirst",
			"isBeforeFirstRange",
			"secondRangePosition",
			"firstRangePosition",
			"ranges",
			"r",
			"ranges",
			"firstRangePosition",
			"secondRangePosition",
			"secondBaseRangePosition",
			"firstBaseRangePosition",
			"secondBaseRange",
			"firstBaseRange",
			"firstFound",
			"",
			"oCircuit",
			"btOli1",
			"btOli2",
			"gcOCircuit",
			"pOCircuit",
			"ctOCircuit",
			"btOCircuit",
			"oCircuitBt",
			"oCircuitGc",
			"oCircuitCt",
			"oCircuitP",
			"oCircuitCt",
			"ocCt",
			"oc1",
			"oc",
			"oli",
			"oli1",
			"{!IF(ocModel.isParent, IF(ocModel.isPrimaryCircuit, 'primaryParentRow', 'parentRow'), 'childRow')}",
			"range",
			"rangeList",
			"l",
			"i",
			"eConnectionIdNodeMap",
			"eCkt",
			"eCircuitIdGeoCodeMap",
			"eConnIdNodeMap",
			"eConnectionIdECircuitMap",
			"eConnectionIdGeoCodeMap",
			"eConIdEthernetCircuitMap",
			"eConnUpdateMap",
			"preventRecursionEplan",
			"mapEConn2Update",
			"QUERY_ROW_LIMIT",
			"ocModel.record.Type__c",
			"ocnToECN",
			"EEServices",
			"SERVICE_TYPE_",
			"TWCEEConstants.NETWORK_TYPE_EPLAN",
			"TWCEEConstants.NETWORK_TYPE_EVPL",
			"TWCEEConstants.NETWORK_TYPE_EPL",
			"TWCEEConstants.NETWORK_TYPE_EVPL",
			"TWCEEConstants.NETWORK_TYPE_EPL",
			"TWCEEConstants.NETWORK_TYPE_EPLAN",
			"con",
			"zSlModel",
			"aSlModel",
			"Ethernet_Circuit__c",
			" ",
			"Bandwi",
			"Id",
			"ocContaine",
			"ocContainerId",
			"ocContainer",
			"String",
			"EEServices",
			"aOli",
			"",
			"moveOli",
			"if(activeOli.Product_line_Name__c.contains('Fiber') || activeOli.Product_line_Name__c.contains('Type')  || activeOli.Product_line_Name__c.contains('DOCSIS') ) {",
			"if(activeOli.Product_Family__c.contains('Fiber') || activeOli.Product_Family__c.contains('Type')  || activeOli.Product_Family__c.contains('DOCSIS') ) {",
			"Trigger"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 30.0
	},
	"input":
	{
		"height": 34.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.MavensMate-OutputPanel":
	{
		"height": 0.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "LimitedEstimator.sublime-project",
	"replace":
	{
		"height": 56.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"re",
				"src\\classes\\RentalGenerator.cls"
			],
			[
				"play",
				"js\\Player.js"
			],
			[
				"stat",
				"js\\StatisticTracker.js"
			],
			[
				"style",
				"css\\style.css"
			],
			[
				"up",
				"js\\UpgradeDescription.js"
			],
			[
				"unit",
				"js\\UnitDescriber.js"
			],
			[
				"save",
				"js\\SaveManager.js"
			],
			[
				"skilln",
				"js\\SkillDescription.js"
			],
			[
				"un",
				"js\\UpgradeDescription.js"
			],
			[
				"upgra",
				"js\\UpgradeDescription.js"
			],
			[
				"player",
				"js\\Player.js"
			],
			[
				"skil",
				"js\\SkillDescription.js"
			],
			[
				"eve",
				"js\\EventDescription.js"
			],
			[
				"event",
				"js\\EventDescriber.js"
			],
			[
				"skillde",
				"js\\SkillDescription.js"
			],
			[
				"gene",
				"js\\Generator.js"
			],
			[
				"skill",
				"js\\SkillDescription.js"
			],
			[
				"uni",
				"js\\UnitDescription.js"
			],
			[
				"stats",
				"js\\StatisticTracker.js"
			],
			[
				"unitde",
				"js\\UnitDescription.js"
			],
			[
				"dis",
				"js\\Discoverer.js"
			],
			[
				"upgr",
				"js\\UpgradeDescriber.js"
			],
			[
				"game",
				"js\\GameModel.js"
			],
			[
				"ge",
				"js\\Generator.js"
			],
			[
				"name",
				"js\\Names.js"
			],
			[
				"upde",
				"js\\UpgradeDescription.js"
			],
			[
				"nam",
				"js\\SkillNames.js"
			],
			[
				"styl",
				"css\\style.css"
			],
			[
				"app",
				"js\\app.js"
			],
			[
				"model",
				"js\\unitModel.js"
			],
			[
				"state",
				"app\\app.states.js"
			],
			[
				"card",
				"assets\\css\\_card.scss"
			],
			[
				"main",
				"assets\\css\\main.scss"
			],
			[
				"sizehtml",
				"app\\components\\size-modal\\size-modal.view.html"
			],
			[
				"modal",
				"app\\services\\modal.service.js"
			],
			[
				"cardcss",
				"assets\\css\\_card.scss"
			],
			[
				"scss",
				"assets\\css\\main.scss"
			],
			[
				"bottomvi",
				"app\\components\\bottom-bar\\bottom-bar.view.html"
			],
			[
				"itemdet",
				"app\\components\\item-detail-modal\\item-detail.controller.js"
			],
			[
				"itemdetail",
				"app\\components\\item-detail\\item-detail.controller.js"
			],
			[
				"inde",
				"index.html"
			],
			[
				"siz",
				"app\\components\\size-modal\\size-modal.controller.js"
			],
			[
				"homvi",
				"app\\pages\\home\\home.view.html"
			],
			[
				"home",
				"app\\pages\\home\\home.controller.js"
			],
			[
				"oppafter",
				"src\\triggers\\OpportunityAfter.trigger"
			],
			[
				"oppafttriglogi",
				"src\\classes\\OpportunityAfterTriggerLogic.cls"
			],
			[
				"oppaftlotest",
				"src\\classes\\OpportunityAfterTriggerLogicTest.cls"
			],
			[
				"eeser",
				"src\\classes\\EEServices.cls"
			],
			[
				"oppcirbefo",
				"src\\classes\\OppCircuitsNetworkBeforeLogicTest.cls"
			],
			[
				"oppcircuitsnetworkbeforelogictest",
				"src\\classes\\OppCircuitsNetworkBeforeLogicTest.cls"
			],
			[
				"opportunitycircuitsnetworkbeforelogic",
				"src\\classes\\OpportunityCircuitsNetworkBeforeLogic.cls"
			],
			[
				"opportunitycircuitafterlogic",
				"src\\classes\\OpportunityCircuitAfterLogic.cls"
			],
			[
				"networkintegrationvalidationhandlertest",
				"src\\classes\\NetworkIntegrationValidationHandlerTest.cls"
			],
			[
				"opportunitycircuitnetworkafterlogictest",
				"src\\classes\\OpportunityCircuitNetworkAfterLogicTest.cls"
			],
			[
				"opportunitycircuitnetworkafterlogic",
				"src\\classes\\OpportunityCircuitNetworkAfterLogic.cls"
			],
			[
				"ocnbefolotes",
				"src\\classes\\OppCircuitsNetworkBeforeLogicTest.cls"
			],
			[
				"ocnbetrig",
				"src\\triggers\\OpportunityCircuitsNetworkBefore.trigger"
			],
			[
				"ocnbefologi",
				"src\\classes\\OpportunityCircuitsNetworkBeforeLogic.cls"
			],
			[
				"ocnbefotriglogi",
				"src\\classes\\SFDockIntegrationBeforeTriggerLogic.cls"
			],
			[
				"oppcircuitsnetworkbeforelogic",
				"src\\classes\\OpportunityCircuitsNetworkBeforeLogic.cls"
			],
			[
				"ocnbeforlogi",
				"src\\classes\\OppCircuitsNetworkBeforeLogicTest.cls"
			],
			[
				"oppbefore",
				"src\\classes\\OpportunityBeforeTriggerLogic.cls"
			],
			[
				"serreqaftlogi",
				"src\\classes\\ServiceRequestAfterTriggerLogic.cls"
			],
			[
				"opportunitycircuitbeforelogic",
				"src\\classes\\OpportunityCircuitBeforeLogic.cls"
			],
			[
				"engineeringbeforetriggerlogic",
				"src\\classes\\EngineeringBeforeTriggerLogic.cls"
			],
			[
				"engineeringaftertriggerlogic",
				"src\\classes\\EngineeringAfterTriggerLogic.cls"
			],
			[
				"eedisconnectoliplugin",
				"src\\classes\\EEDisconnectOliPlugin.cls"
			],
			[
				"engineeringaftertriggerlogictest",
				"src\\classes\\EngineeringAfterTriggerLogicTest.cls"
			],
			[
				"eeservicestest",
				"src\\classes\\EEServicesTest.cls"
			],
			[
				"eeservices",
				"src\\classes\\EEServices.cls"
			],
			[
				"eeoppacccontroller",
				"src\\classes\\EEOppAccController.cls"
			],
			[
				"eemacoligen",
				"src\\classes\\EthernetEverywhereMACDOliGenerator.cls"
			],
			[
				"servicerequestservices",
				"src\\classes\\ServiceRequestServices.cls"
			],
			[
				"eesrplugin",
				"src\\classes\\EECreateSrsPlugin.cls"
			],
			[
				"eediscon",
				"src\\classes\\EEDisconnectOliPlugin.cls"
			],
			[
				"accaftr",
				"src\\classes\\AccountAfterTriggerLogic.cls"
			],
			[
				"eeservi",
				"src\\classes\\EEServices.cls"
			],
			[
				"eede",
				"src\\classes\\EEDetailsController.cls"
			],
			[
				"oppserv",
				"src\\classes\\OpportunityServices.cls"
			],
			[
				"salesuiu",
				"src\\classes\\SalesUIUtils.cls"
			],
			[
				"serreq",
				"src\\classes\\ServiceRequestServices.cls"
			],
			[
				"salesuiservicerequestcreateupdate",
				"src\\classes\\SalesUIServiceRequestCreateUpdate.cls"
			],
			[
				"opportunitybeforetriggerlogic",
				"src\\classes\\OpportunityBeforeTriggerLogicTest.cls"
			],
			[
				"opbetrigg",
				"src\\triggers\\OpportunityBefore.trigger"
			],
			[
				"opbeftrig",
				"src\\triggers\\OpportunityBefore.trigger"
			],
			[
				"opciraftelogic",
				"src\\classes\\OpportunityCircuitAfterLogic.cls"
			],
			[
				"eedisconn",
				"src\\classes\\EEDisconnectOliPlugin.cls"
			],
			[
				"opportunitycircuitafterlogictest",
				"src\\classes\\OpportunityCircuitAfterLogicTest.cls"
			],
			[
				"servicelocationseditallext",
				"src\\classes\\ServiceLocationsEditAllExt.cls"
			],
			[
				"aslwrapper",
				"src\\classes\\AslWrapper.cls"
			],
			[
				"salesuiaddslcntrl",
				"src\\classes\\SalesUIAddSLCntrl.cls"
			],
			[
				"salesuibasecntrl",
				"src\\classes\\SalesUiBaseCntrl.cls"
			],
			[
				"ethevcon",
				"src\\classes\\EthernetEverywhereController.cls"
			],
			[
				"eeoppacccomponent",
				"src\\components\\EEOppAccComponent.component"
			],
			[
				"eeoppaccpage",
				"src\\pages\\EEOppAccPage.page"
			],
			[
				"ethev",
				"src\\pages\\EthernetEverywhere.page"
			],
			[
				"sp7ee",
				"src\\pages\\SP7EEPage.page"
			],
			[
				"sp7eecon",
				"src\\classes\\SP7EEController.cls"
			],
			[
				"telephlinlogi",
				"src\\classes\\TelephoneLineLogic.cls"
			],
			[
				"disconnectoli",
				"src\\classes\\EEDisconnectOliPlugin.cls"
			],
			[
				"opbefore",
				"src\\classes\\OpportunityBeforeTriggerLogic.cls"
			],
			[
				"serreqaftlogic",
				"src\\classes\\ServiceRequestAfterTriggerLogic.cls"
			],
			[
				"opbeforelogic",
				"src\\classes\\OpportunityCircuitBeforeLogic.cls"
			],
			[
				"servicerequestmodel",
				"src\\classes\\ServiceRequestModel.cls"
			],
			[
				"servicerequestbeforetriggerlogic",
				"src\\classes\\ServiceRequestBeforeTriggerLogic.cls"
			],
			[
				"networkintegrationvalidator",
				"src\\classes\\NetworkIntegrationValidator.cls"
			],
			[
				"salesui3",
				"src\\classes\\SalesUI3ProductSelectorHelper.cls"
			],
			[
				"crdd_ca",
				"src\\classes\\CRDD_Calculator.cls"
			],
			[
				"crddcalc",
				"src\\classes\\CRDD_Calculator.cls"
			],
			[
				"netinval",
				"src\\classes\\NetworkIntegrationValidationHandler.cls"
			],
			[
				"serreqser",
				"src\\classes\\ServiceRequestServices.cls"
			],
			[
				"occservices",
				"src\\classes\\OccServices.cls"
			],
			[
				"engineeringafter",
				"src\\triggers\\EngineeeringAfter.trigger"
			],
			[
				"testutil",
				"src\\classes\\TestingUtils.cls"
			],
			[
				"testingutil",
				"src\\classes\\TestingUtils.cls"
			],
			[
				"engbefologte",
				"src\\classes\\EngineeringBeforeTriggerLogicTest.cls"
			],
			[
				"opcirbeftes",
				"src\\classes\\OppCircuitsNetworkBeforeLogicTest.cls"
			],
			[
				"opcirbefor",
				"src\\triggers\\OpportunityCircuitBefore.trigger"
			],
			[
				"netint",
				"src\\classes\\NetworkIntegrationValidationHandler.cls"
			],
			[
				"opciraftelogi",
				"src\\classes\\OpportunityCircuitAfterLogic.cls"
			],
			[
				"opcirbeforlogi",
				"src\\classes\\OpportunityCircuitBeforeLogic.cls"
			],
			[
				"disconplugin",
				"src\\classes\\EEDisconnectOliPlugin.cls"
			],
			[
				"netintval",
				"src\\classes\\NetworkIntegrationValidator.cls"
			],
			[
				"ocnm",
				"src\\classes\\OcnModel.cls"
			],
			[
				"validation",
				"src\\classes\\ValidationError.cls"
			],
			[
				"ocnmodel",
				"src\\classes\\OcnModel.cls"
			],
			[
				"opbefortriglogi",
				"src\\classes\\OpportunityBeforeTriggerLogicTest.cls"
			],
			[
				"oppbefo",
				"src\\classes\\OpportunityBeforeTriggerLogic.cls"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 240.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
